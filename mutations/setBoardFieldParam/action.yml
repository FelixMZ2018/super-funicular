name: set board field
description: moves an issue to a sprintboard

inputs:
  PROJECT_NUMBER:
    description: 'Project Number'
  OWNER:
    description: the owner of the project
  FIELD_NAME:
    description: the target field name
  FIELD_VALUE:
    description: the target field value
  GITHUB_TOKEN:
    description: the github token with the approriate access
runs:

  using: "composite"
  steps:
    - uses: actions/github-script@v6
      with:
        projectNumber: ${{inputs.PROJECT_NUMBER}}
        owner: ${{inputs.OWNER}}
        script: |
          const getBoardQuery = `query getBoard($org: String!, $project_number: Int!) {
              viewer {
                projectV2(number: project_number) {
                      fields(last: 20) {
                        nodes {
                          ... on ProjectV2Field {
                            id
                            name
                          }
                          ... on ProjectV2IterationField {
                            id
                            name
                          }
                          ... on ProjectV2SingleSelectField {
                            id
                            name
                            options {
                              name
                              id
                            }
                          }
                        }
                      }
                    }
              }
            }`;
          const variables = {
            org: core.getInput('owner'),
            project_number: parseInt(core.getInput('projectNumber')),
          }
          console.log({variables})
          const result = await github.graphql(getBoardQuery, variables)
          console.log({result})

